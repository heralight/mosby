/*
 * Copyright 2015 Hannes Dorfmann.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.application'
//apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'kotlin-android'
apply from: '../findbugs.gradle'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  compileOptions {
    sourceCompatibility rootProject.ext.javaSourceCompatibility
    targetCompatibility rootProject.ext.javaTargetCompatibility
  }

  defaultConfig {
    applicationId "com.hannesdorfmann.mosby.sample.dagger2kotlin"
    minSdkVersion rootProject.ext.minSdk
    targetSdkVersion rootProject.ext.targetSdk
    versionName project.VERSION_NAME
    versionCode Integer.parseInt(project.VERSION_CODE)
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    warning 'InvalidPackage' // okhttp uses nio which is not part of android
  }
}

kapt {
    generateStubs = true
}

dependencies {
  compile project(':viewstate')

  compile 'com.android.support:recyclerview-v7:' + rootProject.ext.recyclerviewVersion
  compile 'com.android.support:appcompat-v7:' + rootProject.ext.appcompat7Version
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

  compile 'com.jakewharton:butterknife:' + rootProject.ext.butterknifeVersion

  compile 'io.reactivex:rxjava:'+rootProject.ext.rxjavaVersion
  compile 'io.reactivex:rxandroid:'+rootProject.ext.rxandroidVersion

  kapt 'com.hannesdorfmann.annotatedadapter:processor:' + rootProject.ext.annotatedadapterVersion
  compile 'com.hannesdorfmann.annotatedadapter:annotation:' + rootProject.ext.annotatedadapterVersion
  compile 'com.hannesdorfmann.annotatedadapter:support-recyclerview:' + rootProject.ext.annotatedadapterVersion

  compile 'com.google.dagger:dagger:'+rootProject.ext.dagger2Version
  kapt 'com.google.dagger:dagger-compiler:'+rootProject.ext.dagger2Version
  compile 'javax.annotation:javax.annotation-api:1.2'

  compile 'com.squareup.okhttp:okhttp:'+ rootProject.ext.okhttpVersion
  compile 'com.squareup.picasso:picasso:'+ rootProject.ext.picassoVersion
  compile 'com.squareup.retrofit:retrofit:'+ rootProject.ext.retrofitVersion


  // testing
  testCompile project(':testing')
  testCompile 'com.squareup.retrofit:retrofit-mock:'+ rootProject.ext.retrofitVersion
  testCompile 'com.google.dagger:dagger:'+rootProject.ext.dagger2Version
  testCompile 'com.google.dagger:dagger-compiler:'+rootProject.ext.dagger2Version
  testCompile 'javax.annotation:javax.annotation-api:1.2'
}
